name: Build and deploy App

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      env:
        applicationID: ${{ vars.APPLICATIONID }}
        searchOnlyAPIKey: ${{ vars.SEARCHONLYAPIKEY }}
        index_name: ${{ vars.INDEX_NAME }}

        apiKey: ${{ vars.APIKEY }}
        authDomain: ${{ vars.AUTHDOMAIN }}
        projectId: ${{ vars.PROJECTID }}
        storageBucket: ${{ vars.STORAGEBUCKET }}
        messagingSenderId: ${{ vars.MESSAGINGSENDERID }}
        appId: ${{ vars.APPID }}
        telegramBotToken: ${{ vars.TELEGRAMBOTTOKEN }}
        telegramChatId: ${{ vars.TELEGRAMCHATID }}
      run: |
        npm install
        npx webpack --mode production --env applicationID=$applicationID --env searchOnlyAPIKey=$searchOnlyAPIKey --env index_name=$index_name --env apiKey=$apiKey --env authDomain=$authDomain --env projectId=$projectId --env storageBucket=$storageBucket --env messagingSenderId=$messagingSenderId --env appId=$appId --env telegramBotToken=$telegramBotToken --env telegramChatId=$telegramChatId
        
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
